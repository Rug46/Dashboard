@model Dashboard.Models.ActivityModel

@{
    ViewData["Title"] = "Edit";
}

<div class="main-content-inner">
    <div class="row">
        <div class="col-md-6" style="margin: auto;">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label asp-for="Date" class="control-label"></label>
                    <input asp-for="Date" class="form-control" />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Game" class="control-label"></label>
                    @*<input asp-for="Game" class="form-control" />*@
                    @using (var db = new Dashboard.Data.Database())
                    {
                        var records = db.Games
                            .OrderBy(gm => gm.Id)
                            .ToList();

                        var selected = Model.Game;

                    <select name="GameName" class="form-control" style="height: 40px;">
                        @for (int i = 0; i < records.Count; i++)
                        {
                            if (records.ElementAt(i).Name == selected)
                            {
                                <option value="@records.ElementAt(i).Name" selected>@records.ElementAt(i).Name</option>
                            }
                            else
                            {
                                <option value="@records.ElementAt(i).Name">@records.ElementAt(i).Name</option>
                            }
                        }
                    </select>
                    }
                    <span asp-validation-for="Game" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Finish" class="control-label"></label>
                    <input asp-for="Finish" class="form-control" />
                    <span asp-validation-for="Finish" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Mode" class="control-label"></label>
                    @*<input asp-for="Mode" class="form-control" />*@
                    @using (var db = new Dashboard.Data.Database())
                    {
                        var records = db.Modes
                            .OrderBy(mm => mm.Id)
                            .ToList();

                        var selected = Model.Mode;

                    <select name="ModeName" class="form-control" style="height: 40px;">
                        <option value="0" selected disabled>Select Mode...</option>
                        @for (int i = 0; i < records.Count; i++)
                        {
                            if (records.ElementAt(i).Name == selected)
                            {
                                <option value="@records.ElementAt(i).Name" selected>@records.ElementAt(i).Name</option>
                            }
                            else
                            {
                                <option value="@records.ElementAt(i).Name">@records.ElementAt(i).Name</option>
                            }
                        }
                    </select>
                    }
                    <span asp-validation-for="Mode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
